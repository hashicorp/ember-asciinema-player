# Sample workflow for building and deploying a Ember site to GitHub Pages
name: Deploy Ember with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'main'
  pull_request: {}

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions/configure-pages@v2  # TSCCR: no entry for repository "actions/configure-pages"
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        id: node-modules-cache
        with:
          path: '**/node_modules'
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-
      - uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        with:
          node-version: '16.x'
      - run: yarn install
      - run: yarn build:development
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1  # TSCCR: no entry for repository "actions/upload-pages-artifact"
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1  # TSCCR: no entry for repository "actions/deploy-pages"
